name: Build and deploy .NET Core application to Web App DB-Angora

on:
  push:
    branches:
      - master

env:
  AZURE_WEBAPP_NAME: DB-Angora                      # Navn på Azure Web App, som applikationen skal deployes til
  AZURE_WEBAPP_PACKAGE_PATH: DB-AngoraREST\publish  # Output-sti til den buildede pakke
  CONFIGURATION: Debug                              # Debug/Release (Debug giver merer information)
  DOTNET_CORE_VERSION: 8.0.x                        # .NET Core SDK, version
  WORKING_DIRECTORY: .                              # Sti til roden af applikationsmappen
  ASPNETCORE_ENVIRONMENT: Development               # Development, Staging, Production (Development giver mest debug info)

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK # Sætter .NET SDK op til den definerede version
        uses: actions/setup-dotnet@v4                       
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Restore dependencies # Gendanner afhængigheder(NuGets, .csproj og .slns) til hele løsningen
        run: dotnet restore "C:\Users\mikkf\source\repos\DB-Angora\DB-AngoraLib.sln"

      - name: Build # Bygger hele løsningen ud fra satte specifikationer (Debug/Release)
        run: dotnet build "C:\Users\mikkf\source\repos\DB-Angora\DB-AngoraLib.sln" --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Test # Kører testene for alle testprojekter i løsningen
        run: dotnet test "C:\Users\mikkf\source\repos\DB-Angora\DB-AngoraLib.sln" --configuration ${{ env.CONFIGURATION }} --no-build

      - name: Publish # Publicerer applikationen til en output-mappe (defineret i AZURE_WEBAPP_PACKAGE_PATH)
        run: dotnet publish "C:\Users\mikkf\source\repos\DB-Angora\DB-AngoraREST\DB-AngoraREST.csproj" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"

      - name: Publish Artifacts # Upload af bygget webapp som en artefakt, så den kan bruges i næste job
        uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: windows-latest
    needs: build
    steps:

      - name: Download artifact from build job 
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Set environment variables
        env:
          AZURE_SQL_CONNECTION_STRING: ${{ secrets.AZURE_SQL_CONNECTION_STRING }} # Denne secret skal overskrives manuelt via > Settings > Environment variables
          JWT_ISSUER: ${{ secrets.JWT_ISSUER }}
          JWT_AUDIENCE: ${{ secrets.JWT_AUDIENCE }}
          JWT_KEY: ${{ secrets.JWT_KEY }}
          ASPNETCORE_ENVIRONMENT: Production
        run: |
          echo "Environment variables set."

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.DB_Angora_CC97 }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}